twitter {
  version = "1.1"

  auth {
    consumerTokenKey = ${TWITTER_CONSUMER_TOKEN_KEY}
    consumerTokenSecret = ${TWITTER_CONSUMER_TOKEN_SECRET}

    accessTokenKey = ${TWITTER_ACCESS_TOKEN_KEY}
    accessTokenSecret = ${TWITTER_ACCESS_TOKEN_SECRET}
  }

  rest {
    api = "https://api.twitter.com"
    media = "https://upload.twitter.com"
  }

  streaming {
    public = "https://stream.twitter.com"
    user = "https://userstream.twitter.com"
    site = "https://sitestream.twitter.com"
  }

  // List of followed twitter users ids. Use http://gettwitterid.com/
  followed = [877728873340956672, //"VentureCoinist"
    3179873194, // CryptoHustle
    717191666629795840, // Dmitriysz
  ]

  // List of tracked keywords
  tracks = []
}

reddit {
  clientId = ${REDDIT_CLIENT_ID}
  clientSecret = ${REDDIT_CLIENT_SECRET}
  userAgent = ${REDDIT_USER_AGENT}
  username = ${REDDIT_USERNAME}
  password = ${REDDIT_PASSWORD}

  subs = ["CryptoCurrency", "Crypto_Currency_News"]
}

cryptocontrol {
  apiKey = ${CRYPTOCONTROL_API}
}

rss {
  feeds = [""]
}

akka {
  stdout-loglevel = "INFO"
  loglevel = "INFO"
  extensions = [akka.persistence.Persistence]

  actor {
    default-mailbox.stash-capacity = 10000
  }

  persistence {

    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?POSTGRES_HOST}
    url = "jdbc:postgresql://127.0.0.1:5432/postgres?reWriteBatchedInserts=true"
    user = "postgres"
    user = ${?POSTGRES_USER}
    password = "postgres"
    password = ${?POSTGRES_PASSWORD}
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}